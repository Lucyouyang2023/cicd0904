name: Terraform Workflow
#on: [push]
on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-northeast-1"
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=ap-northeast-1" >> $GITHUB_ENV

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Debug Terraform Output
        run: |
         terraform output -raw ecr_repository_url
         ECR_REPOSITORY_URL=$(terraform output -raw ecr_repository_url)
         echo "ECR_REPOSITORY_URL=$ECR_REPOSITORY_URL"
         echo "ECR_REPOSITORY_URL=$ECR_REPOSITORY_URL" > debug_output.txt
         cat debug_output.txt        
         working-directory: ./terraform

      - name: Get ECR Repository URL
        id: ecr
        run: |
          ECR_REPOSITORY_URL=$(terraform output -raw ecr_repository_url | awk -F '::' '{print $1}')
          #echo "ECR_REPOSITORY_URL=$ECR_REPOSITORY_URL"
          echo "ECR_REPOSITORY_URL=$ECR_REPOSITORY_URL" >> $GITHUB_ENV
        working-directory: ./terraform


    #   - name: Get Subnet ID
    #     id: subnet
    #     run: echo "::set-output name=subnet_id::$(terraform output -raw subnet_id)"

    #   - name: Get Security Group ID
    #     id: sg
    #     run: echo "::set-output name=security_group_id::$(terraform output -raw security_group_id)"

     
